---
title: "Untitled"
format: html
editor: visual
---

\

```{r}

#wie mit Eva besprochen, die Einteilung der TG in 3 sparten, diese als Info für die boxplots:
#erstmal der dataframe, jede Gruppe (DS und C) bekommt ein e3igene Einteilung:

weizenernte_sorted<-weizenernte[order(weizenernte$TG),]


weizenernte_sorted_C<-weizenernte_sorted%>%inner_join(metatable_slim, by="Plant ID")%>%dplyr::filter(Condition=="Control")

weizenernte_sorted_DS<-weizenernte_sorted%>%inner_join(metatable_slim, by="Plant ID")%>%dplyr::filter(Condition=="Drought stress")

splitsize<-nrow(weizenernte_sorted_DS)%/% 3


weizenernte_sorted_DS$TG_score<-c(rep("low", splitsize), rep("medium", splitsize), rep("high", splitsize))


weizenernte_sorted_C$TG_score<-c(rep("low", splitsize), rep("medium", splitsize), rep("high", splitsize))

weizenernte_all_TGscored<-rbind(weizenernte_sorted_C, weizenernte_sorted_DS)


CamData_Bonitur_TG_allscored<-lapply(CamData_Bonitur_TG, function(pi){inner_join(pi, dplyr::select(weizenernte_all_TGscored, `Plant ID`, TG_score), by="Plant ID")%>%dplyr::relocate(TG_score, .after = Condition)})
  
  
#CamData_Bonitur_TG_DSscored<-lapply(CamData_Bonitur_TG_DS, function(pi){inner_join(pi, dplyr::select(weizenernte_sorted_DS, `Plant ID`, TG_score), by="Plant ID")})

new_split_dataframe_TGscore<-lapply(new_split_dataframe,function(pi){inner_join(pi, dplyr::select(weizenernte_all_TGscored, `Plant ID`, TG_score), by="Plant ID")%>%dplyr::relocate(TG_score, .after = `Measuring Date`)%>%inner_join(metatable_slim, by=c("Plant ID", "Genotype"))%>%dplyr::select(-`Size-avg`, -TG)})

CamData_HConly_melt<-lapply(new_split_dataframe_TGscore, function(melt_me){
  
   me_melt<-melt(melt_me, id.var=c("Plant ID","Genotype", "Measuring Date","Condition", "TG_score"))
   return(me_melt)
  
})


#contingency tables TG_score and cluster
for(i in Dataframes_withClusterinfo_TGscore){
  if(!is.null(i)==TRUE){
    print(i$`Measuring Date`[1])
    print(table(i[, (ncol(i)-1):ncol(i)]))}}

#nur um zu ziegen.dass es geht, das darszustellen, mal schauen, was man da so machen kann:

 #hist(weizenernte$TG, breaks=20, labels=weizenernte$`Plant ID`)
 
 CamData_Bonitur_TG_allscored_melt<-lapply(CamData_Bonitur_TG_allscored, function(me){
   me_melt<-melt(me, id.var=c("Plant ID","Genotype", "Measuring Date","Condition","TG_score"))
   return(me_melt)
 })

###
```

Boxplots und Biplots mit TG_score colouring Gruppe DS

```{r}


#für die zwei boxplots nebeneinander:
#ggarrange(list_plots_IndicesANDmean[[i]], list_water_plots[[i]], nrow=2, ncol=1, legend = "top", heights=c(1,0.5))

boxplots_path<-"C:/Users/HabisohnC/Desktop/DigAB/plots/DownstreamStatistics_plots/boxplots/"


boxes_TGscore<-lapply(list_indices_Hc, function(b_ind){lapply(CamData_Bonitur_TG_allscored, function(ya){
   if(!is.null(ya)){
     
     yi<-ya%>%dplyr::filter(Condition=="Drought stress")
      
  boxi<-ggplot(yi, aes(x=TG_score, y=!!sym(b_ind)))+geom_boxplot()+labs(title=paste0("Drought stress ", yi$`Measuring Date`[1]))
  

   ggsave(boxi, filename=paste0(boxplots_path, paste0( yi$`Measuring Date`[1],paste0(b_ind, "_DS_box.png" ))))
  
  
  return(box)}})
})


boxes_TGscored_DS_unlisted<-unlist(boxes_TGscore_DS, recursive = FALSE)





##############cluster_biplots mit unserere TG_score Einteilung:



path_plotsDownstream_PCAs_DS_TGscore<-"C:/Users/HabisohnC/Desktop/DigAB/plots/DownstreamStatistics_plots/biplots_TG_score_colouring/"
################
#auftrennen der dfs nach Condition: hier DS für alle Daten
 
 list_PCA_wideDFs_DS_TGscored<-lapply(CamData_Bonitur_TG_DSscored, function(x){
   
    if(!is.null(x)){
      g_geno<-x
  gh<-x%>%dplyr::select(-TG)%>%dplyr::select(where(is.numeric), TG_score)
  y<-gh[,which(apply(gh, 2, var)!=0)]
   p<-prcomp(dplyr::select(y, where(is.numeric)), scale.=TRUE)
   p$date<-x$`Measuring Date`[1]
 
   biplot<-ggbiplot::ggbiplot(p,labels = g_geno$Genotype, labels.size=4,point.size=1, groups = gh$TG_score)+labs(title=paste0("PCA biplot with TG_score grouping, Drought Stress ", p$date))+
    scale_color_manual(values = c("red","green", "purple"))+ scale_fill_manual(values =c("red","green", "purple"))+
    geom_point(aes(colour=gh$cluster))
   ggsave(biplot,filename = paste0(path_plotsDownstream_PCAs_DS_TGscore,p$date,"_TGscore_DS.png"), width=20, height=20)
  return(biplot)
  
}})
 

```
