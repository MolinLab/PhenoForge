"0",""
"0",""
"0","############replacement code f√ºr redundant code unten:"
"0","#neue source Liste: list_indices_byloop"
"0",""
"0","#same as list_mean_sd_INDICES!!!"
"0","list_meanOVERCondition<-lapply(list_indices_by_loop, function(i){i%>%"
"0","    group_by(`Measuring Date`,Condition)%>%"
"0","    summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%"
"0","    mutate(Index=i$variable[1])})"
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Measuring Date'. You can override using the `.groups` argument."
"0","list_plots_meanOVERCondition<-lapply(list_meanOVERCondition, function(p){p%>%ggplot(aes(x=as.Date(`Measuring Date`, format=""%Y-%m-%d""),y=Mean,color=Condition))+"
"0","  ylab(p$Index[1])+xlab(""Date"")+"
"0","  geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill=""lightgrey"",alpha=0.02,color=""lightgrey"")+"
"0","  geom_point(size=1.5)+geom_line()+theme_bw(base_size = 10)+geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),"
"0","  width=.2, position=position_dodge(0.05))+"
"0","  scale_color_manual(values = c(""Control""=""turquoise3"", "
"0","                                ""Drought stress""=""coral""))+"
"0","  theme(axis.text.x = element_text(angle=75, hjust=1.2),legend.text=element_text(size=12),"
"0","        legend.title = element_text(size=13),"
"0","        axis.title.x = element_text(hjust=1),"
"0","       axis.text=element_text(size=13),axis.title=element_text(size=14))"
"0","  #ggsave(file=paste0(path_plotaverage, paste0(p$Index[1], ""_average.pdf"")))"
"0","  # ggsave(file=paste0(path_plotaverage, paste0(p$Index[1], ""_average.png"")))"
"0","  })"
"0",""
