---
title: "Growth Chamber Analysis Pipeline"
format: html
editor: visual
execute: 
  echo: false
file:
---

Growth Chamber Data gathering...this is test text :)

```         
```

```         
```

```{r, warning=FALSE, message=FALSE}
#| label: load-packages
#| message: false

requiredPackages<-c("readxl","tidyverse","reshape2","stringr","sjmisc","ggpubr","matrixStats", "gridExtra","corrplot","nlme","lme4","car","emmeans","multcomp","multcompView", "lmtest","GGally","RColorBrewer")

for(package in requiredPackages){
  if(!requireNamespace(package, quietly=TRUE))
    install.packages(package)
}

library(readxl)
library(tidyverse)
library(reshape2)
library(reshape)
library(stringr)
library(sjmisc)
library(ggpubr)
library(matrixStats)
library(gridExtra)
library(corrplot)
library(nlme)
library(lme4)
library(car)
library(emmeans)
library(multcomp)
library(multcompView)
library(lmtest)
library(GGally)
library(RColorBrewer)


list_dfs<-list()

list1<-list()

water_readings2<-read_excel("C:/Users/HabisohnC/Desktop/WhaetVIZ_metadata/water_round2.xlsx") #auch dieser Pfad wird in CL übergeben werden

path_allfiles<-"C:/Users/HabisohnC/Desktop/Round2/xlxs_files"
#dieser Pfad ist variabel, kann in CL oder sonstige als Argument übergeben werden....kommt im  meta-coding, das die pipeline in Gang setzt (bash script?, ...)

for(i in path_allfiles){path<-i
filenames<-list.files(path,pattern = '*.xlsx', recursive=TRUE, full.names = T)
for(i in filenames){
  #if file_path_extnsn==".xlsx: read_excel(i)
  #else:
    newfile<-read_excel(i)
    output<-gsub(path, 
               paste0("Run_", gsub("-","_", newfile[1,1])),
               tools::file_path_sans_ext(i))
    assign(output, newfile)
    list1[[length(list1)+1]]=output
    list_dfs[[length(list_dfs)+1]]=newfile
    names(list_dfs)<-list1
    rm(newfile)
    rm(output)
}}


```

```{r, include=FALSE}

source("functionsXLSX.R", local = knitr::knit_global() )


```

```{r,warning=FALSE, message=FALSE}

list_allLists<-list_extension(names(list_dfs)) 
#checkliste: falls fehlende Observations: echo(".....)
#if_else(is_identical(dim(i), dim(i+1),....))so inn etwa

list_Fc_Plant<-list_allLists[["list_Fc_Plant"]]
list_Hc_Plant<-list_allLists[["list_Hc_Plant"]]
list_Kinetic<-list_allLists[["list_Kinetic"]]
list_Rgb_color<-list_allLists[["list_Rgb_Color_Plant"]]
list_Rgb_Morpho<-list_allLists[["list_Rgb_Morpho_Plant"]]





list_cutFc<-lapply(list_Fc_Plant, function(x){x%>%dplyr::select('Measuring Date', 'Plant ID', Fm:Size)%>%mutate('Measuring Date'=gsub("\\s\\d+.+", "",x$`Measuring Date`[1]))})

list_cutHc<-lapply(list_Hc_Plant, function(x){x%>%dplyr::select('Measuring Date', 'Plant ID', ends_with("avg"), ends_with("median"))%>%mutate('Measuring Date'=gsub("\\s\\d+.+", "",x$`Measuring Date`[1]))})


list_cutKin<-lapply(list_Kinetic, function(x){x%>%dplyr::select('Measuring Date', 'Plant ID', '50000':ncol(x) )%>%mutate('Measuring Date'=gsub("\\s\\d+.+", "",x$`Measuring Date`[1]))})

list_cutRgb_C<-lapply(list_Rgb_color, function(x){x%>%dplyr::select('Measuring Date','Plant ID', 13:ncol(x))%>%mutate('Measuring Date'=gsub("\\s\\d+.+", "",x$`Measuring Date`[1]))})

#list_Rgb_Morpho<-list_Rgb_Morpho[-1]

list_cutRgb_M<-lapply(list_Rgb_Morpho, function(x){x%>%dplyr::select('Measuring Date','Plant ID', AREA_MM:SOL)%>%mutate('Measuring Date'=gsub("\\s\\d+.+", "",x$`Measuring Date`[1]))})

```

Table containing meta-data of Genotypes and their replicates ...lapply()

```{r,warning=FALSE, message=FALSE}
metatable<-cbind(list_Hc_Plant[[4]]$'Plant ID',list_Hc_Plant[[4]]$'Tray Info', list_Hc_Plant[[4]]$'Plant Name')
colnames(metatable)<-c("Plant ID", "Tray Info","Plant Name")
metatable<-as_tibble(metatable)
metatable<-metatable %>% mutate(Condition = if_else(grepl("\\d*DS", metatable$`Tray Info`), "Drought stress", "Control" ))


placeholdertable<-data.frame(Plant.Name="none")

for(i in metatable$'Plant Name'){modified_string <- gsub("_\\d", "", i)
placeholdertable<-rbind(placeholdertable, modified_string)}
placeholdertable<-placeholdertable[-1,]
metatable<-metatable%>%mutate(Genotype=placeholdertable)%>%function_make_trayINfo()
metatable

```

Table containing water measurements:

```{r,warning=FALSE, message=FALSE}

for(i in water_readings2$MeasuringDate){i<-gsub("\\s\\d+.+", "", water_readings2$MeasuringDate)
water_readings2$MeasuringDate<-i}

water_readings_DSOnly<-water_readings2%>%dplyr::select(contains("DS"))%>%mutate(Dates=water_readings2$MeasuringDate)%>%relocate(Dates)

water_readings_DSOnly[,2:ncol(water_readings_DSOnly)]<-sapply(water_readings_DSOnly[,2:ncol(water_readings_DSOnly)], as.numeric)

water_readings_DSOnly[is.na(water_readings_DSOnly)]<-0

water_readings_justValues<-water_readings_DSOnly[,-1]#brauch ich für meine Funktion"build_water_info()"

water_readings_DSOnly_mean_sd<-water_readings_DSOnly%>%mutate(Mean=rowMeans(.[,2:ncol(.)]))%>%mutate(SD=rowSds(as.matrix(.[,2:(ncol(.)-1)])))
water_readings2

```

Table-merger....table-melter...lists4plots

```{r,warning=FALSE, message=FALSE}
list_merged_tables<-list()
list_merged_tables2<-list()
list_merged_tables3<-list()
#list_merged_tables4<-list()
for(i in 1:length(list_cutHc)){merge_table<-merge(list_cutHc[[i]], list_cutFc[[i]],
                                                  by="Plant ID",all=TRUE)

list_merged_tables[[length(list_merged_tables)+1]]<-merge_table}
 
list_merged_tables2<-lapply(list_merged_tables, function(x){x%>%dplyr::select(-'Measuring Date.y')})

#2nd merge
for(i in 1:length(list_cutHc)){merge_table<-merge(list_merged_tables2[[i]], list_cutKin[[i]], by="Plant ID",all=TRUE) 

list_merged_tables3[[length(list_merged_tables3)+1]]<-merge_table}
 
list_merged_tables3<-lapply(list_merged_tables3, function(x){x%>%dplyr::select(-'Measuring Date')%>%dplyr::rename('Measuring Date'='Measuring Date.x')})


list_melt_table<-lapply(list_merged_tables3, function(x){
  
  x%>% melt(measure.vars=3:ncol(x))%>%mutate_at('value', as.numeric)
})




list_sd_and_mean<-lapply(list_melt_table, join_and_calc)
list_meltAndNames<-lapply(list_melt_table, merge_and_select)

list_of_names<-unlist(unique(list_meltAndNames[[4]]$Genotype))
##
#die merge sektion wird überarbeitet, falls ich merge_recurse() verwende, wird es aber keine Listen mehr geben, und ich muss das Konzept generell umändern

#es gibt ein Problem mit den unterschiedlichen Datums-Daten für die Messarten beim merge:
#die merges verursachen den Verlust von Datum und zuschreibung bei  manchen Individuen. das muss ich noch beheben->>> deshalb die NAs in den plots



```

data selection and filtering for plots

```{r, warning=FALSE, message=FALSE}

#####sweet spot is here :)

#loop für die Listen für die plots

names_andNDVIavg<-select_indices(list_meltAndNames, "NDVI-avg")

names_andNDVImedian<-select_indices(list_meltAndNames, "NDVI-median")

names_andPSRIavg<-select_indices(list_meltAndNames, "PSRI-avg")

names_andPSRImedian<-select_indices(list_meltAndNames, "PSRI-median")

names_andQY_max<-select_indices(list_meltAndNames, "QY_max")

names_andSize<-select_indices(list_meltAndNames, "Size")

names_andMCARI1avg<-select_indices(list_meltAndNames, "MCARI1-avg")

names_andPRIavg<-select_indices(list_meltAndNames, "PRI-avg")

names_andSIPIavg<-select_indices(list_meltAndNames, "SIPI-avg")

names_andOSAVIavg<-select_indices(list_meltAndNames, "OSAVI-avg")

list_QY_max_andNames<-list()
list_NDVIavg_andNames<-list()
list_NDVImedian_andNames<-list()
list_PSRIavg_andNames<-list()
list_PSRImedian_andNames<-list()
list_Size_andNames<-list()
list_MCARI1avg_andNmaes<-list()
list_OSAVIavg_andNames<-list()
list_SIPIavg_andNames<-list()


for (i in unique(metatable$Genotype)){
  list_QY_max_andNames[[length(list_QY_max_andNames)+1]]<- allDatesOneNameQY_max(i)
  
  #names(list_QY_max_andNames)<-list_of_names
  }

for(i in unique(metatable$Genotype)){
  list_NDVIavg_andNames[[length(list_NDVIavg_andNames)+1]]<-allDatesOneNameNDVIavg(i)
  #names(list_NDVIavg_andNames)<-list_of_names
}


for(i in unique(metatable$Genotype)){
  list_NDVImedian_andNames[[length(list_NDVImedian_andNames)+1]]<-allDatesOneNameNDVImedian(i)
  #names(list_NDVImedian_andNames)<-list_of_names
  }

for(i in unique(metatable$Genotype)){
  list_PSRIavg_andNames[[length(list_PSRIavg_andNames)+1]]<-allDatesOneNamePSRIavg(i)
  #names(list_PSRIavg_andNames)<-list_of_names
}

for(i in unique(metatable$Genotype)){
  list_PSRImedian_andNames[[length(list_PSRImedian_andNames)+1]]<-allDatesOneNamePSRImedian(i)
  #names(list_PSRImedian_andNames)<-list_of_names
  }

for (i in unique(metatable$Genotype)){
  list_Size_andNames[[length(list_Size_andNames)+1]]<- allDatesOneNameSize(i)
}
  

for(i in unique(metatable$Genotype)){list_MCARI1avg_andNmaes[[length(list_MCARI1avg_andNmaes)+1]]<-allDatesOneNameMCARI1avg(i)}


list_plots_Size<-list()
list_plot_NDVIavg<-list()
list_plot_NDVImedian<-list()
list_plot_PSRIavg<-list()
list_plot_QYMax<-list()
list_plots_MCARI1<-list()


#list_NDVI_test<-lapply(names_andNDVIavg, na.omit)

```

```{r,warning=FALSE, message=FALSE}

for(i in list_NDVIavg_andNames)
   {list_plot_NDVIavg[[length(list_plot_NDVIavg)+1]]<-
       ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
     geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
     ylab("NDVI average")+xlab("Date")+labs(title=i$Genotype[1])+
      geom_rect(aes(xmin=as.Date("2024-04-17", format="%Y-%m-%d"),xmax=as.Date("2024-05-08", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
     geom_point(size=1.5)+theme_bw(base_size = 10)+
   scale_color_manual(values = c("Control"="turquoise3", 
                                                "Drought stress"="coral"))+
     theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16), 
           legend.text=element_text(size=12),legend.title = element_text(size=13), 
           axis.title.x = element_text(hjust=1),
           axis.text=element_text(size=13),axis.title=element_text(size=14))}





for(i in list_Size_andNames){list_plots_Size[[length(list_plots_Size)+1]]<-
  ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
  theme_bw(base_size = 10)+
  geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
  ylab("Size")+xlab("Date")+labs(title=i$Genotype[1])+
   geom_rect(aes(xmin=as.Date("2024-04-17", format="%Y-%m-%d"),xmax=as.Date("2024-05-08", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
     geom_point(size=1.5)+scale_color_manual(values = c("Control"="turquoise3", 
                                                          "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
        legend.text=element_text(size=12),legend.title = element_text(size=13), 
        axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))}




list_plot_PSRIavg<-list()

for(i in list_PSRIavg_andNames){list_plot_PSRIavg[[length(list_plot_PSRIavg)+1]]<-
  ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
  theme_bw(base_size = 10)+
geom_smooth(aes(color=Condition, group=Condition))+
  ylab("PSRI average")+xlab("Date")+labs(title=i$Genotype[1])+
   geom_rect(aes(xmin=as.Date("2024-04-17", format="%Y-%m-%d"),xmax=as.Date("2024-05-08", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
     geom_point(size=1.5)+
  scale_color_manual(values = c("Control"="turquoise3", 
              "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16), 
        legend.text=element_text(size=12),legend.title = element_text(size=13), 
      axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))}





for(i in list_QY_max_andNames){list_plot_QYMax[[length(list_plot_QYMax)+1]]<-
  ggplot(i,aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
  theme_bw(base_size = 10)+
  geom_smooth(aes(color=Condition, group=Condition))+
  ylab("QY_max")+xlab("Date")+labs(title=i$Genotype[1])+
  geom_rect(aes(xmin=as.Date("2024-04-17", format="%Y-%m-%d"),xmax=as.Date("2024-05-08", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
     geom_point(size=1.5)+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2), plot.title = element_text(size=16), 
        legend.text=element_text(size=12),legend.title = element_text(size=13),
        axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))}




for(i in list_MCARI1avg_andNmaes){list_plots_MCARI1[[length(list_plots_MCARI1)+1]]<-
  ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
  ylab("MCARI1 average")+xlab("Date")+labs(title=i$Genotype[1])+
   geom_rect(aes(xmin=as.Date("2024-04-17", format="%Y-%m-%d"),xmax=as.Date("2024-05-08", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
     geom_point(size=1.5)+
  theme_bw(base_size = 10)+
  geom_smooth(aes(color=Condition, group=Condition))+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16), 
        legend.text=element_text(size=12),legend.title = element_text(size=13), 
       axis.title.x = element_text(hjust=1),
       axis.text=element_text(size=13),axis.title=element_text(size=14))}

```

```{r,warning=FALSE, message=FALSE}

list_mean_sd_MCARI1<-list()
list_mean_sd_NDVI<-list()
list_mean_sd_QY_max<-list()
list_mean_sd_PSRIavg<-list()
list_mean_sd_Size<-list()

#plots mean listen:
list_mean_plots_MCARI1<-list()
list_mean_plots_NDVI<-list()
list_mean_plots_QY_max<-list()
list_mean_plots_PSRI<-list()
list_mean_plots_Size<-list()

for(i in list_MCARI1avg_andNmaes){
  list_mean_sd_MCARI1[[length(list_mean_sd_MCARI1)+1]]<-i%>%
    group_by(`Measuring Date`,Condition)%>%
    summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}

#make plots of mean with scatterplots of all genotypes in list:
for(i in 1:length(list_mean_sd_MCARI1)){
  list_mean_plots_MCARI1[[length(list_mean_plots_MCARI1)+1]]<-
    list_plots_MCARI1[[i]]+geom_line(data=list_mean_sd_MCARI1[[i]], 
                                     aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean,color=Condition, group=Condition))}


for(i in list_NDVIavg_andNames){list_mean_sd_NDVI[[length(list_mean_sd_NDVI)+1]]<-
  i%>%group_by(`Measuring Date`, Condition)%>%
  summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}

for(i in 1:length(list_mean_sd_NDVI)){
  list_mean_plots_NDVI[[length(list_mean_plots_NDVI)+1]]<-
    list_plot_NDVIavg[[i]]+geom_line(data=list_mean_sd_NDVI[[i]], 
                                     aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean,color=Condition, group=Condition))}


for(i in list_QY_max_andNames){list_mean_sd_QY_max[[length(list_mean_sd_QY_max)+1]]<-
  i%>%group_by(`Measuring Date`, Condition)%>% 
  summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}


for(i in 1:length(list_mean_sd_QY_max)){
  list_mean_plots_QY_max[[length(list_mean_plots_QY_max)+1]]<-
    list_plot_QYMax[[i]]+geom_line(data=list_mean_sd_QY_max[[i]], 
                                     aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean,color=Condition, group=Condition))}


for(i in list_PSRIavg_andNames){
  list_mean_sd_PSRIavg[[length(list_mean_sd_PSRIavg)+1]]<-
  i%>%group_by(`Measuring Date`, Condition)%>% 
  summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}


for(i in 1:length(list_mean_sd_PSRIavg)){
  list_mean_plots_PSRI[[length(list_mean_plots_PSRI)+1]]<-
    list_plot_PSRIavg[[i]]+geom_line(data=list_mean_sd_PSRIavg[[i]], 
                                   aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean,color=Condition, group=Condition))}



for(i in list_Size_andNames){
  list_mean_sd_Size[[length(list_mean_sd_Size)+1]]<-
    i%>%group_by(`Measuring Date`, Condition)%>% 
    summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}


for(i in 1:length(list_mean_sd_Size)){
  list_mean_plots_Size[[length(list_mean_plots_Size)+1]]<-
    list_plots_Size[[i]]+geom_line(data=list_mean_sd_Size[[i]], 
                                     aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean,color=Condition,group=Condition))}

```

```{r, warning=FALSE, message=FALSE}
path_plotaverage<-"C:/Users/HabisohnC/Desktop/Round2/WheatVIZ_Round2/plots_round2/"


select_indices(list_sd_and_mean,"MCARI1-avg")%>%bind_rows()%>%ggplot(aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean,color=Condition))+
  ylab("MCARI1 average")+xlab("Date")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  geom_point(size=1.5)+theme_bw(base_size = 10)+geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),
  width=.2, position=position_dodge(0.05))+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),legend.text=element_text(size=12),
        legend.title = element_text(size=13),
        axis.title.x = element_text(hjust=1),
       axis.text=element_text(size=13),axis.title=element_text(size=14))

ggsave(file=paste0(path_plotaverage,"MCARIaverage.pdf"))

ggsave(file=paste0(path_plotaverage, "MCARIaverage.png"))


select_indices(list_sd_and_mean,"NDVI-avg")%>%bind_rows()%>%ggplot(aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean,color=Condition))+
  ylab("NDVI average")+xlab("Date")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  geom_point(size=1.5)+
  theme_bw(base_size = 10)+
  geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),width=.2, position=position_dodge(0.05))+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2), legend.text=element_text(size=12),
        legend.title = element_text(size=13),
        axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))

ggsave(file=paste0(path_plotaverage,"NDVIaverage.pdf"))
ggsave(file=paste0(path_plotaverage,"NDVIaverage.png"))

select_indices(list_sd_and_mean,"PSRI-avg")%>%bind_rows()%>%ggplot(aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean,color=Condition))+
  ylab("PSRI average")+xlab("Date")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  geom_point(size=1.5)+
  theme_bw(base_size = 10)+
  geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),width=.2, position=position_dodge(0.05))+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75,hjust=1.2), legend.text=element_text(size=12),
        legend.title = element_text(size=13),
        axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))

ggsave(file=paste0(path_plotaverage,"PSRIaverage.pdf"))
ggsave(file=paste0(path_plotaverage,"PSRI_average.png"))

select_indices(list_sd_and_mean,"QY_max")%>%bind_rows()%>%ggplot(aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean,color=Condition))+xlab("Date")+
  ylab("QY_max average")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  geom_point(size=1.5)+
  theme_bw(base_size = 10)+
  geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),width=.2, position=position_dodge(0.05))+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75,hjust=1.2), ,legend.text=element_text(size=12),
        legend.title = element_text(size=13),
         axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))

ggsave(file=paste0(path_plotaverage,"QYMax_average.pdf"))

ggsave(file=paste0(path_plotaverage,"QYMax_average.png"))



```

```{r}


list_plots_WaterGenotype_QYMax<-list()
list_plots_WaterGenotype_NDVI<-list()
list_plots_WaterGenotype_PSRI<-list()
list_plots_WaterGenotype_MCARI1<-list()
list_dual_wpotential_QYMaxGenotype<-list()
list_dual_wpotential_NDVIGenotype<-list()
list_dual_wpotential_PSRIGenotype<-list()
list_dual_wpotential_MCARI1Genotype<-list()
```

```{r,warning=FALSE, message=FALSE}


names_andPRIavg<-select_indices(list_meltAndNames, "PRI-avg")

allDatesOneNamePRIavg<-function(f){name_allone<-lapply(names_andPRIavg, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}

list_PRIavg_andNames<-list()

PRIavg_sepNames<-for(i in list_of_names){
  list_PRIavg_andNames[[length(list_PRIavg_andNames)+1]]<-allDatesOneNamePRIavg(i)}
#names(list_NDVIavg_andNames)<-list_of_names


list_plot_PRIavg<-list()

for(i in list_PRIavg_andNames){list_plot_PRIavg[[length(list_plot_PRIavg)+1]]<-
  ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
  theme_bw(base_size = 10)+
  geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
  ylab("PRI average")+xlab("Date")+labs(title=i$Genotype[1])+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  geom_point(size=1.5)+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2), 
        plot.title = element_text(size=16), 
        axis.title.x = element_text(hjust=1),
        legend.text=element_text(size=12),legend.title = element_text(size=13),
        axis.text=element_text(size=13),axis.title=element_text(size=14))}

list_mean_plots_PRIavg<-list()
list_mean_sd_PRIavg<-list()

#make mean and sd_lists of each Genotype in list:
for(i in list_PRIavg_andNames){
  list_mean_sd_PRIavg[[length(list_mean_sd_PRIavg)+1]]<-i%>%
    group_by(`Measuring Date`,Condition)%>%
    summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}

#make plots of mean with scatterplots of all genotypes in list:
for(i in 1:length(list_mean_sd_PRIavg)){
  list_mean_plots_PRIavg[[length(list_mean_plots_PRIavg)+1]]<-
    list_plot_PRIavg[[i]]+geom_line(data=list_mean_sd_PRIavg[[i]], 
                                    aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean,color=Condition, group=Condition))}


names_andPRIavg<-select_indices(list_meltAndNames, "PRI-avg")

allDatesOneNamePRIavg<-function(f){name_allone<-lapply(names_andPRIavg, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}

list_PRIavg_andNames<-list()

PRIavg_sepNames<-for(i in list_of_names){
  list_PRIavg_andNames[[length(list_PRIavg_andNames)+1]]<-allDatesOneNamePRIavg(i)}
#names(list_NDVIavg_andNames)<-list_of_names


list_plot_PRIavg<-list()

for(i in list_PRIavg_andNames){list_plot_PRIavg[[length(list_plot_PRIavg)+1]]<-
  ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`, color=Condition))+
  theme_bw(base_size = 10)+
  geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
  ylab("PRI average")+xlab("Date")+labs(title=i$Genotype[1])+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  geom_point(size=1.5)+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=75, hjust=1.2), 
        plot.title = element_text(size=16), 
        axis.title.x = element_text(hjust=1),
        legend.text=element_text(size=12),legend.title = element_text(size=13),
        axis.text=element_text(size=13),axis.title=element_text(size=14))}

list_mean_plots_PRIavg<-list()
list_mean_sd_PRIavg<-list()

#make mean and sd_lists of each Genotype in list:
for(i in list_PRIavg_andNames){
  list_mean_sd_PRIavg[[length(list_mean_sd_PRIavg)+1]]<-i%>%
    group_by(`Measuring Date`,Condition)%>%
    summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])}

#make plots of mean with scatterplots of all genotypes in list:
for(i in 1:length(list_mean_sd_PRIavg)){
  list_mean_plots_PRIavg[[length(list_mean_plots_PRIavg)+1]]<-
    list_plot_PRIavg[[i]]+geom_line(data=list_mean_sd_PRIavg[[i]], 
                                    aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=Mean, color=Condition,group=Condition))}
```

```{r, include=FALSE, warning=FALSE, message=FALSE}

source("water.R", local = knitr::knit_global())
```

Hinweis: um die NAs hier werde ich mich noch kümmern (ad plots 2nd Round;), ich weiss wo sie herkommen und wie ich sie los werde, hatte nur noch keine Zeit dafür :)

```{r, warning=FALSE, message=FALSE}
QYmax_allDates<-do.call("rbind", names_andQY_max)
NDVI_allDates<-do.call("rbind", names_andNDVIavg)
MCARI_allDates<-do.call("rbind", names_andMCARI1avg)
names_andMCARI1med<-select_indices(list_meltAndNames, "MCARI1-median")
MCARimedian_allDates<-do.call("rbind", names_andMCARI1med)
names_andPRImedian<-select_indices(list_meltAndNames, "PRI-median")
names_andPRIavg<-select_indices(list_meltAndNames, "PRI-avg")
PRIaverage_allDates<-do.call("rbind", names_andPRIavg)

path_plotaverage<-"C:/Users/HabisohnC/Desktop/Round2/WheatVIZ_Round2/plots_round2/"

ggplot(QYmax_allDates, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value, color=Condition))+
  ylab("QY max")+xlab("Date")+labs(title="QY max all Genotypes")+
  geom_point(size=1.5)+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  theme_bw(base_size = 10)+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=90, vjust=0.5, size=9))+
  geom_smooth(method="lm",aes(color=Condition, group=Condition))+geom_point()

ggsave(filename = paste0(path_plotaverage,"QYMax_allGenotypes.pdf"))
ggsave(filename = paste0(path_plotaverage,"QYMax_allGenotypes.png"))




ggplot(NDVI_allDates, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value, color=Condition))+
  ylab("NDVI average")+xlab("Date")+labs(title="NDVI all Genotypes")+
  geom_point(size=1.5)+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  theme_bw(base_size = 10)+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=90, vjust=0.5, size=9))+
  geom_smooth(method="lm",aes(color=Condition, group=Condition))+geom_point()

ggsave(filename = paste0(path_plotaverage,"NDVI_allGenotypes.pdf"))
ggsave(filename = paste0(path_plotaverage,"NDVI_allGenotypes.png"))




ggplot(MCARI_allDates, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value, color=Condition))+
  ylab("MCARI average")+xlab("Date")+labs(title="MCARI all Genotypes")+
  geom_point(size=1.5)+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  theme_bw(base_size = 10)+
  scale_color_manual(values = c("Control"="turquoise3", 
                                "Drought stress"="coral"))+
  theme(axis.text.x = element_text(angle=90, vjust=0.5, size=9))+
  geom_smooth(method="lm",aes(color=Condition, group=Condition))+geom_point()

ggsave(filename = paste0(path_plotaverage,"MCARI_allGenotypes.pdf"))
ggsave(filename = paste0(path_plotaverage,"MCARI_allGenotypes.png"))

ggplot(PRIaverage_allDates, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value, color=Condition))+
    ylab("PRI average")+xlab("Date")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),alpha=0.02,fill="lightgrey", color="lightgrey")+
  labs(title="PRI average all Genotypes")+
    geom_point(size=1.5)+theme_bw(base_size = 10)+
    scale_color_manual(values = c("Control"="turquoise3", 
                                  "Drought stress"="coral"))+
    theme(axis.text.x = element_text(angle=90, vjust=0.5, size=9))+
    geom_smooth(method="lm",aes(color=Condition, group=Condition))+geom_point()
```

```{r, warning=FALSE, message=FALSE}
for(i in water_tables_all20Genotypes){list_plots_WaterGenotype_QYMax[[length(list_plots_WaterGenotype_QYMax)+1]]<-
 ggplot(i[is.element(i$Date, list_QY_max_andNames[[1]]$`Measuring Date`),],
        aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean))+xlab("Date")+
       scale_y_continuous(name="Mean water potential [kPa]")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  theme_bw(base_size = 10)+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
        legend.text=element_text(size=12),legend.title = element_text(size=13), 
       axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),
        axis.title=element_text(size=14))+
       geom_path(color="darkblue", group=1)}



for(i in water_tables_all20Genotypes){list_plots_WaterGenotype_NDVI[[length(list_plots_WaterGenotype_NDVI)+1]]<-
  ggplot(i[is.element(i$Date, list_NDVIavg_andNames[[1]]$`Measuring Date`),],
         aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean))+xlab("Date")+
  scale_y_continuous(name="Mean water potential [kPa]")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  theme_bw(base_size = 10)+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
        legend.text=element_text(size=12),legend.title = element_text(size=13),
        axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))+
  geom_path(color="darkblue", group=1)}


for(i in water_tables_all20Genotypes){list_plots_WaterGenotype_PSRI[[length(list_plots_WaterGenotype_PSRI)+1]]<-
  ggplot(i[is.element(i$Date, list_PSRIavg_andNames[[1]]$`Measuring Date`),],
         aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean))+xlab("Date")+
  scale_y_continuous(name="Mean water potential [kPa]")+
  theme_bw(base_size = 10)+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
        legend.text=element_text(size=12),legend.title = element_text(size=13),
        axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))+
  geom_path(color="darkblue", group=1)}


for(i in water_tables_all20Genotypes){list_plots_WaterGenotype_MCARI1[[length(list_plots_WaterGenotype_MCARI1)+1]]<-
  ggplot(i[is.element(i$Date, list_MCARI1avg_andNmaes[[1]]$`Measuring Date`),],
         aes(x=as.Date(Date, format="%Y-%m-%d"),y=Mean))+xlab("Date")+
  scale_y_continuous(name="Mean water potential [kPa]")+
  #geom_rect(aes(xmin=as.Date("2024-02-12", format="%Y-%m-%d"),xmax=as.Date("2024-03-01", format="%Y-%m-%d"),ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
  theme_bw(base_size = 10)+
  theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
        legend.text=element_text(size=12),legend.title = element_text(size=13),
         axis.title.x = element_text(hjust=1),
        axis.text=element_text(size=13),axis.title=element_text(size=14))+
  geom_path(color="darkblue", group=1)}
```

```{r, fig.dim=c(6,8),warning=FALSE, message=FALSE}

for(i in 1:length(water_tables_all20Genotypes)){list_dual_wpotential_QYMaxGenotype[[length(list_dual_wpotential_QYMaxGenotype)+1]]<-
    ggarrange(list_mean_plots_QY_max[[i]],list_plots_WaterGenotype_QYMax[[i]], nrow=2, ncol=1, legend = "top", heights=c(1,0.5))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "QYMaxduo.pdf"))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "QYMaxduo.png"))
}


for(i in 1:length(water_tables_all20Genotypes)){list_dual_wpotential_NDVIGenotype[[length(list_dual_wpotential_NDVIGenotype)+1]]<-
  ggarrange(list_mean_plots_NDVI[[i]],list_plots_WaterGenotype_NDVI[[i]], nrow=2, ncol=1, legend = "top", heights=c(1,0.5))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "NDVIduo.pdf"))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "NDVIduo.png"))
}

for(i in list_dual_wpotential_NDVIGenotype){print(i)}


for(i in 1:length(water_tables_all20Genotypes)){list_dual_wpotential_PSRIGenotype[[length(list_dual_wpotential_PSRIGenotype)+1]]<-
  ggarrange(list_mean_plots_PSRI[[i]],list_plots_WaterGenotype_PSRI[[i]], nrow=2, ncol=1, legend = "top",heights=c(1,0.5))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "PSRIduo.pdf"))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "PSRIduo.png"))
}




for(i in 1:length(water_tables_all20Genotypes)){list_dual_wpotential_MCARI1Genotype[[length(list_dual_wpotential_MCARI1Genotype)+1]]<-
  ggarrange(list_mean_plots_MCARI1[[i]],list_plots_WaterGenotype_MCARI1[[i]], nrow=2, ncol=1, legend = "top", heights=c(1,0.5))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "MCARIduo.pdf"))
ggsave(filename=paste0(names(water_tables_all20Genotypes[i]), "MCARIduo.png"))
}
```
