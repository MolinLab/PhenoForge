for(i in list_Size_andNames){list_plots_Size[[length(list_plots_Size)+1]]<-
ggplot(i, aes(x=Measuring.Date, y=value,group=Plant.Name, color=Condition))+
theme_bw(base_size = 10)+
#geom_smooth(aes(color=condition, group=condition))+#kommt eventuell weg
ylab("Size")+xlab("Date")+labs(title=i$Plant.Name.solo[1])+
geom_point()+geom_point()+scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
legend.text=element_text(size=12),legend.title = element_text(size=13),
axis.title.x=element_text(margin=margin(t=30)),
axis.title.y = element_text(margin=margin(r=30)),
axis.text=element_text(size=15),axis.title=element_text(size=14))}
library(readxl)
library(tidyverse)
library(reshape2)
library(stringr)
library(sjmisc)
library(ggpubr)
library(matrixStats)
library(gridExtra)
library(corrplot)
list_dfs<-list()
list1<-list()
list_paths<-list("C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/Run2",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/Run3",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/Run4",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/Run5",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/14-15.02.2024_Run7/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/21.2.2024_Run8/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/23-24.2.2024_Run9/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/26.2_Hc_solo/VNIR",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/28.2_Run10/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/1.3_Run11/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/4.3_Run12/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/6.3_Run13/einzeln",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/8.3_Run14",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/11.3",
"C:/Users/HabisohnC/Desktop/Charlotte/WheatVIZ/13.3")
for(i in list_paths){path<-i
filenames<-list.files(path, full.names = T)
for(i in filenames){
newfile<-read.csv(i)
output<-gsub(path,
paste0("Run_", gsub("-","_", newfile[1,1])),
tools::file_path_sans_ext(i))
assign(output, newfile)
list1[[length(list1)+1]]=output
list_dfs[[length(list_dfs)+1]]=newfile
names(list_dfs)<-list1
rm(newfile)
rm(output)
}}
list_Fc_Plant<-list()
list_Kinetic<-list()
list_Hc_Plant<-list()
list_Hc_avgSpectrum<-list()
list_Rgb_Morpho_Plant<-list()
list_Rgb_Color_Plant<-list()
list_merged_tables<-list()
list_merged_tables2<-list()
list_merged_tables3<-list()
list_extension(names(list_dfs))
list_extension<-function(x){
y<-c("Fc_Plant","Kinetic", "Hc_Plant", "Hc_avgSpectrum", "Rgb_Morpho_Plant","Rgb_Color_Plant" )
for (i in x){
#y<-c("Fc_Plant","Kinetic", "Hc_Plant", "Hc_avgSpectrum", "Rgb_Morpho_Plant","Rgb_Color_Plant" )
for (k in y){
if (str_contains(i,k)==TRUE){
vector_indices<-c()
vector_indices[length(vector_indices)+1]=which(x==i)
if (k == "Kinetic"){
list_Kinetic[length(list_Kinetic)+1]<<-list_dfs[vector_indices]
}
else if(k == "Hc_Plant"){
list_Hc_Plant[length(list_Hc_Plant)+1]<<-list_dfs[vector_indices]
}
else if (k == "Rgb_Morpho_Plant"){
list_Rgb_Morpho_Plant[length(list_Rgb_Morpho_Plant)+1]<<-list_dfs[vector_indices]
}
else if (k == "Rgb_Color_Plant"){
list_Rgb_Color_Plant[length(list_Rgb_Color_Plant)+1]<<-list_dfs[vector_indices]
}
else if(k=="Fc_Plant"){
list_Fc_Plant[length(list_Fc_Plant)+1]<<-list_dfs[vector_indices]
}
else if (k == "Hc_avgSpectrum"){
list_Hc_avgSpectrum[length(list_Hc_avgSpectrum)+1]<<-list_dfs[vector_indices]
}}
}}
}
join_and_calc<-function(x){
x%>%
inner_join(select(metatable, -Tray.Info),
by="Plant.ID")%>%group_by(variable, Condition)%>%
summarise_at(vars(value), list(Mean=mean, SD=sd))%>%mutate(Date=x$Measuring.Date[1])}
select_indices<-function(x,y){
result<-lapply(x, function(z){
z%>%filter(variable==y)})
return(result)
}
select_date<-function(x,y){
result<-lapply(x, function(z){
z%>%filter(Measuring.Date==y)
})
return(result)
}
select_columns<-function(x,y){
result<-lapply(x, function(z){
z%>%select(all_of(y))})
return(result)
}
testing_fun<-function(x,z){x%>%slice(grep(z, Plant.Name))}
merge_and_select<-function(x){
x%>%merge(metatable, by="Plant.ID", all=TRUE)%>%select(- Tray.Info)}
#hier wäre ein zusätzlicher loop gut, Index-list loop oder so...
allDatesOneNameNDVIavg<-function(f){name_allone<-lapply(names_andNDVIavg, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}
allDatesOneNameNDVImedian<-function(f){name_allone<-lapply(names_andNDVImedian, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}
allDatesOneNamePSRIavg<-function(f){name_allone<-lapply(names_andPSRIavg, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}
allDatesOneNamePSRImedian<-function(f){name_allone<-lapply(names_andPSRImedian, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}
allDatesOneNameQY_max<-function(f){name_allone<-lapply(names_andQY_max, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}
allDatesOneNameSize<-function(f){name_allone<-lapply(names_andSize, testing_fun, z=f)
name_allone<-do.call("rbind", name_allone)
return(name_allone)
}
allDatesOneNameMCARI1avg<-function(f){name_allone_MCARI1<-lapply(names_andMCARI1avg, testing_fun, z=f)
name_allone_MCARI1<-do.call("rbind", name_allone_MCARI1)
return(name_allone_MCARI1)}
make_trayInfo_tables<-function(x){
new_list<-list()
for (i in x){
tray_column<-data.frame(Tray=1)
#tray_list<-list()
for(k in i$Plant.Name){
tray_number<-str_extract_all(k, "\\d+")
tray_column[nrow(tray_column)+1,]<-tray_number
}
tray_column<-tray_column[-1,]
#tray_list[[length(tray_list)+1]]<<-tray_column
#new_list<-list()
new_list[[length(new_list)+1]]<-i%>%mutate(Tray=tray_column)
}
return(new_list)}
build_water_info<-function(x){
vector_indices_trays<-c()
for(k in x$Tray[1:6]){
for(t in list_water_trayNumbers){
if(k%in%t==TRUE){
vector_indices_trays[length(vector_indices_trays)+1]<-match(t, list_water_trayNumbers)
}
}
}
dataframe_new<-do.call(cbind.data.frame, water_readings_justValues[,vector_indices_trays])
dataframe_new<-dataframe_new%>%
mutate(Mean=rowMeans(.[,1:ncol(dataframe_new)]))%>%
mutate(SD=rowSds(as.matrix(dataframe_new),cols = grep("DS", colnames(dataframe_new))))%>%mutate(Date=water_readings_DSOnly$Dates)%>%relocate(Date)
return(dataframe_new)
}
list_extension(names(list_dfs))
list_cutFc<-lapply(list_Fc_Plant, function(x){x%>%select(Measuring.Date, Plant.ID, Fm:Size)%>%mutate(Measuring.Date=x$Measuring.Date[1])})
list_cutHc<-lapply(list_Hc_Plant, function(x){x%>%select(Measuring.Date, Plant.ID, ends_with("avg"), ends_with("median"))%>%mutate(Measuring.Date=x$Measuring.Date[1])})
list_cutKin<-lapply(list_Kinetic, function(x){x%>%select(Measuring.Date, Plant.ID, X50000:X3150000 )%>%mutate(Measuring.Date=x$Measuring.Date[1])})
#merging in steps --> only two dfs at a time possible
#1st merge
for(i in 1:length(list_cutHc)){merge_table<-merge(list_cutHc[i], list_cutFc[i], by="Plant.ID",all=TRUE)
list_merged_tables[[length(list_merged_tables)+1]]<-merge_table}
list_merged_tables2<-lapply(list_merged_tables, function(x){x%>%select(-Measuring.Date.y)})
#2nd merge
for(i in 1:length(list_cutHc)){merge_table<-merge(list_merged_tables2[i], list_cutKin[i], by="Plant.ID",all=TRUE)
list_merged_tables3[[length(list_merged_tables3)+1]]<-merge_table}
list_merged_tables3<-lapply(list_merged_tables3, function(x){x%>%select(-Measuring.Date)%>%rename(Measuring.Date=Measuring.Date.x)})
list_melt_table<-lapply(list_merged_tables3, function(x){
x%>% melt(measure.vars=3:41)
})
list_sd_and_mean<-lapply(list_melt_table, join_and_calc)
q()
q()
