for(i in list_cutHc){print(anyNA(i))}
for(i in list_meltTables_all){print(anyNA(i))}
View(list_meltTables_all[[1]])
for(i in list_cutFc){print(anyNA(i))}
q()
#| label: load-packages
#| message: false
requiredPackages<-c("readxl",
"tidyverse",
"reshape2",
"stringr",
"sjmisc","ggpubr",
"matrixStats",
"gridExtra",
"corrplot","nlme",
"lme4","car",
"emmeans","multcomp",
"multcompView",
"lmtest","GGally",
"RColorBrewer",
"MultivariateRandomForest",
"multivar","randomForestSRC",
"rsample","ggsci",
"corrr","ggcorrplot",
"FactoMineR","vcd",
"factoextra","rfPermute",
"ggfortify","agricolae",
"randomForest","stats",
"ade4","magrittr",
"cluster","ggstatsplot",
"rstatix")
for(package in requiredPackages){
if(!requireNamespace(package, quietly=TRUE))
install.packages(package)
}
library(readxl)
library(tidyverse)
library(reshape2)
library(reshape)
library(stringr)
library(sjmisc)
library(ggpubr)
library(matrixStats)
library(gridExtra)
library(corrplot)
library(nlme)
library(lme4)
library(car)
library(emmeans)
library(multcomp)
library(multcompView)
library(lmtest)
library(GGally)
library(RColorBrewer)
library(MultivariateRandomForest)
library(caret)
library(randomForestSRC)
library(rsample)
library(ggsci)
#source("functionsXLSX.R", local = knitr::knit_global() )
#####
#statistics packages
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(vcd)
library(factoextra)
library(rfPermute)
library(ggfortify)
library(agricolae)
library(randomForest)
library(stats)
library(ade4)
library(magrittr)
library(cluster)
library(ggstatsplot)
library(rstatix)
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
source("metatable_Run2.R", local = knitr::knit_global() )
source("datawrangling3.R", local = knitr::knit_global() )
#source("watertable.R", local = knitr::knit_global() )
#source("metaData_GC_plotting.R", local = knitr::knit_global() )
#source("manualFiles.R",local = knitr::knit_global())
#naming the dfs in the list of HC indices
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
names(list_INDICES_splitBYName)<-list_of_names
list_indices<-unlist(list_INDICES_splitBYName, recursive = FALSE)
list_mean_sd_INDICES<-list()
list_plots_ALL_HC<-list()
list_plots_IndicesANDmean<-list()
#calculating mean per df (one index, one genotype df all dates)
for(i in list_indices){
list_mean_sd_INDICES[[length(list_mean_sd_INDICES)+1]]<-i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])}
#plotting
for(i in list_indices){list_plots_ALL_HC[[length(list_plots_ALL_HC)+1]]<-
ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`,
color=Condition))+
#geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
ylab(i$variable[1])+xlab("Date")+labs(title=i$Genotype[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+theme_bw(base_size = 10)+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
legend.text=element_text(size=12),legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))}
#adding the mean to plot
for(i in 1:length(list_mean_sd_INDICES)){
list_plots_IndicesANDmean[[length(list_plots_IndicesANDmean)+1]]<-
list_plots_ALL_HC[[i]]+geom_line(data=list_mean_sd_INDICES[[i]],
aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),
y=Mean,color=Condition, group=Condition))
# ggsave(file=paste0(path_plotaverage, paste0(x$`Measuring Date`, ".png")))
}
list_plots_ALL_HC[[4]]
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
source("metatable_Run2.R", local = knitr::knit_global() )
source("datawrangling3.R", local = knitr::knit_global() )
#source("watertable.R", local = knitr::knit_global() )
#source("metaData_GC_plotting.R", local = knitr::knit_global() )
#source("manualFiles.R",local = knitr::knit_global())
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
source("metatable_Run2.R", local = knitr::knit_global() )
source("datawrangling3.R", local = knitr::knit_global() )
#source("watertable.R", local = knitr::knit_global() )
#source("metaData_GC_plotting.R", local = knitr::knit_global() )
#source("manualFiles.R",local = knitr::knit_global())
#naming the dfs in the list of HC indices
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
names(list_INDICES_splitBYName)<-list_of_names
list_indices<-unlist(list_INDICES_splitBYName, recursive = FALSE)
list_mean_sd_INDICES<-list()
list_plots_ALL_HC<-list()
list_plots_IndicesANDmean<-list()
#calculating mean per df (one index, one genotype df all dates)
for(i in list_indices){
list_mean_sd_INDICES[[length(list_mean_sd_INDICES)+1]]<-i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])}
#plotting
for(i in list_indices){list_plots_ALL_HC[[length(list_plots_ALL_HC)+1]]<-
ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`,
color=Condition))+
#geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
ylab(i$variable[1])+xlab("Date")+labs(title=i$Genotype[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+theme_bw(base_size = 10)+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
legend.text=element_text(size=12),legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))}
#adding the mean to plot
for(i in 1:length(list_mean_sd_INDICES)){
list_plots_IndicesANDmean[[length(list_plots_IndicesANDmean)+1]]<-
list_plots_ALL_HC[[i]]+geom_line(data=list_mean_sd_INDICES[[i]],
aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),
y=Mean,color=Condition, group=Condition))
# ggsave(file=paste0(path_plotaverage, paste0(x$`Measuring Date`, ".png")))
}
list_plots_IndicesANDmean[[3]]
############replacement code fÃ¼r redundant code unten:
#neue source Liste: list_indices_byloop
#same as list_mean_sd_INDICES!!!
list_meanOVERCondition<-lapply(list_indices_by_loop, function(i){i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])})
list_plots_meanOVERCondition<-lapply(list_meanOVERCondition, function(p){p%>%ggplot(aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),y=Mean,color=Condition))+
ylab(p$Index[1])+xlab("Date")+labs(title=p$Index[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+geom_line()+theme_bw(base_size = 10)+geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),
width=.2, position=position_dodge(0.05))+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),legend.text=element_text(size=12),
legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))
#ggsave(file=paste0(path_plotaverage, paste0(p$Index[1], "_average.pdf")))
# ggsave(file=paste0(path_plotaverage, paste0(p$Index[1], "_average.png")))
})
list_plots_meanOVERCondition[[4]]
View(list_indices_by_loop[[4]])
View(list_melt_dfs[[4]])
View(list_melt_dfs[[1]])
names(list_melt_dfs)
View(list_meltTables_Named[[5]])
for(i in list_meltTables_Named){print(anyNA(i))}
View(list_meltTables_Named[[1]])
View(list_meltTables_Named[[2]])
View(list_cutHc[[1]])
for(i in list_cutHc){print(anyNA(i))}
View(list_cutHc[[2]])
View(list_cutHc[[3]])
list_melt_HC<-lapply(list_cutHc, function(m){
melt(m,measure.vars=3:ncol(m))
})
for(i in list_melt_HC){print(anyNA(i))}
for(i in list_meltHC){print(anyNA(i))}
for(i in list_meltTables_all){print(anyNA(i))}
#| label: load-packages
#| message: false
requiredPackages<-c("readxl",
"tidyverse",
"reshape2",
"stringr",
"sjmisc","ggpubr",
"matrixStats",
"gridExtra",
"corrplot","nlme",
"lme4","car",
"emmeans","multcomp",
"multcompView",
"lmtest","GGally",
"RColorBrewer",
"MultivariateRandomForest",
"multivar","randomForestSRC",
"rsample","ggsci",
"corrr","ggcorrplot",
"FactoMineR","vcd",
"factoextra","rfPermute",
"ggfortify","agricolae",
"randomForest","stats",
"ade4","magrittr",
"cluster","ggstatsplot",
"rstatix")
for(package in requiredPackages){
if(!requireNamespace(package, quietly=TRUE))
install.packages(package)
}
library(readxl)
library(tidyverse)
library(reshape2)
library(reshape)
library(stringr)
library(sjmisc)
library(ggpubr)
library(matrixStats)
library(gridExtra)
library(corrplot)
library(nlme)
library(lme4)
library(car)
library(emmeans)
library(multcomp)
library(multcompView)
library(lmtest)
library(GGally)
library(RColorBrewer)
library(MultivariateRandomForest)
library(caret)
library(randomForestSRC)
library(rsample)
library(ggsci)
#source("functionsXLSX.R", local = knitr::knit_global() )
#####
#statistics packages
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(vcd)
library(factoextra)
library(rfPermute)
library(ggfortify)
library(agricolae)
library(randomForest)
library(stats)
library(ade4)
library(magrittr)
library(cluster)
library(ggstatsplot)
library(rstatix)
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
source("metatable_Run2.R", local = knitr::knit_global() )
source("datawrangling3.R", local = knitr::knit_global() )
#source("watertable.R", local = knitr::knit_global() )
#source("metaData_GC_plotting.R", local = knitr::knit_global() )
#source("manualFiles.R",local = knitr::knit_global())
path_plotaverage<-"C:/Users/HabisohnC/Desktop/DigAB/plots/geno_meanCondition/"
list_melt_HC<-lapply(list_cutHc, function(m){
melt(m,measure.vars=3:ncol(m))
})
#naming the dfs in the list of HC indices
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
names(list_INDICES_splitBYName)<-list_of_names
list_indices<-unlist(list_INDICES_splitBYName, recursive = FALSE)
list_mean_sd_INDICES<-list()
list_plots_ALL_HC<-list()
list_plots_IndicesANDmean<-list()
#calculating mean per df (one index, one genotype df all dates)
for(i in list_indices){
list_mean_sd_INDICES[[length(list_mean_sd_INDICES)+1]]<-i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])}
#plotting
for(i in list_indices){list_plots_ALL_HC[[length(list_plots_ALL_HC)+1]]<-
ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`,
color=Condition))+
#geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
ylab(i$variable[1])+xlab("Date")+labs(title=i$Genotype[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+theme_bw(base_size = 10)+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
legend.text=element_text(size=12),legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))}
#adding the mean to plot
for(i in 1:length(list_mean_sd_INDICES)){
list_plots_IndicesANDmean[[length(list_plots_IndicesANDmean)+1]]<-
list_plots_ALL_HC[[i]]+geom_line(data=list_mean_sd_INDICES[[i]],
aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),
y=Mean,color=Condition, group=Condition))
# ggsave(file=paste0(path_plotaverage, paste0(x$`Measuring Date`, ".png")))
}
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
source("metatable_Run2.R", local = knitr::knit_global() )
source("datawrangling3.R", local = knitr::knit_global() )
#source("watertable.R", local = knitr::knit_global() )
#source("metaData_GC_plotting.R", local = knitr::knit_global() )
#source("manualFiles.R",local = knitr::knit_global())
path_plotaverage<-"C:/Users/HabisohnC/Desktop/DigAB/plots/geno_meanCondition/"
list_melt_HC<-lapply(list_cutHc, function(m){
melt(m,measure.vars=3:ncol(m))
})
#naming the dfs in the list of HC indices
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
names(list_INDICES_splitBYName)<-list_of_names
list_indices<-unlist(list_INDICES_splitBYName, recursive = FALSE)
list_mean_sd_INDICES<-list()
list_plots_ALL_HC<-list()
list_plots_IndicesANDmean<-list()
#calculating mean per df (one index, one genotype df all dates)
for(i in list_indices){
list_mean_sd_INDICES[[length(list_mean_sd_INDICES)+1]]<-i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])}
#plotting
for(i in list_indices){list_plots_ALL_HC[[length(list_plots_ALL_HC)+1]]<-
ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`,
color=Condition))+
#geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
ylab(i$variable[1])+xlab("Date")+labs(title=i$Genotype[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+theme_bw(base_size = 10)+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
legend.text=element_text(size=12),legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))}
#adding the mean to plot
for(i in 1:length(list_mean_sd_INDICES)){
list_plots_IndicesANDmean[[length(list_plots_IndicesANDmean)+1]]<-
list_plots_ALL_HC[[i]]+geom_line(data=list_mean_sd_INDICES[[i]],
aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),
y=Mean,color=Condition, group=Condition))
# ggsave(file=paste0(path_plotaverage, paste0(x$`Measuring Date`, ".png")))
}
list_melt_HC<-lapply(list_cutHc, function(m){
melt(m,measure.vars=3:ncol(m))
})
list_meltTables_Named<-lapply(list_melt_HC, merge_and_select, metatable)
list_of_names<-unique(metatable$Genotype)
list_indices_Hc<-colnames(dplyr::select(list_Hc_Plant[[1]],  ends_with("avg")))
#list_other-measurement-types
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
View(list_meltTables_all[[3]])
View(list_INDICES_splitBYName[[3]])
list_meltTables_Named<-lapply(list_melt_HC, merge_and_select, metatable)%>%unlist(recursive=F)
View(list_INDICES_splitBYName[[3]])
list_meltTables_Named<-lapply(list_melt_HC, merge_and_select, metatable)#%>%un
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
View(list_INDICES_splitBYName[[3]][3])
View(list_INDICES_splitBYName[[3]][[3]])
#quarto::quarto_render("user-input.qmd")
source("read_in_paths_2.R", local = knitr::knit_global() )
source("functions_updated.R", local = knitr::knit_global() )
source("datawrangling1.R", local = knitr::knit_global() )
source("metatable_Run2.R", local = knitr::knit_global() )
source("datawrangling3.R", local = knitr::knit_global() )
#source("watertable.R", local = knitr::knit_global() )
#source("metaData_GC_plotting.R", local = knitr::knit_global() )
#source("manualFiles.R",local = knitr::knit_global())
path_plotaverage<-"C:/Users/HabisohnC/Desktop/DigAB/plots/geno_meanCondition/"
#list_melt_HC<-lapply(list_cutHc, function(m){
# melt(m,measure.vars=3:ncol(m))
#})
#list_meltTables_Named<-lapply(list_melt_HC, merge_and_select, metatable)#%>%unlist(recursive=F)
#naming the dfs in the list of HC indices
list_INDICES_splitBYName<-lapply(list_of_names, function(b){lapply(list_indices_Hc, function(q){
list_index<-indices.to.list(q,"Hc_Plant")
genotype_list<-testing_fun(list_index,b)
return(genotype_list)}
)})
names(list_INDICES_splitBYName)<-list_of_names
list_indices<-unlist(list_INDICES_splitBYName, recursive = FALSE)
list_mean_sd_INDICES<-list()
list_plots_ALL_HC<-list()
list_plots_IndicesANDmean<-list()
#calculating mean per df (one index, one genotype df all dates)
for(i in list_indices){
list_mean_sd_INDICES[[length(list_mean_sd_INDICES)+1]]<-i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])}
#plotting
for(i in list_indices){list_plots_ALL_HC[[length(list_plots_ALL_HC)+1]]<-
ggplot(i, aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"), y=value,group=`Plant Name`,
color=Condition))+
#geom_smooth(aes(color=Condition, group=Condition))+#kommt eventuell weg
ylab(i$variable[1])+xlab("Date")+labs(title=i$Genotype[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+theme_bw(base_size = 10)+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),plot.title = element_text(size=16),
legend.text=element_text(size=12),legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))}
#adding the mean to plot
for(i in 1:length(list_mean_sd_INDICES)){
list_plots_IndicesANDmean[[length(list_plots_IndicesANDmean)+1]]<-
list_plots_ALL_HC[[i]]+geom_line(data=list_mean_sd_INDICES[[i]],
aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),
y=Mean,color=Condition, group=Condition))
# ggsave(file=paste0(path_plotaverage, paste0(x$`Measuring Date`, ".png")))
}
list_plots_[[3]]
list_plots_IndicesANDmean[[3]]
View(list_indices_by_loop[[3]])
list_of_names
list_indices_Hc
View(list_meltTables_all[[3]])
View(list_cutHc[[3]])
list_meanOVERCondition<-lapply(list_indices_by_loop, function(i){i%>%
group_by(`Measuring Date`,Condition)%>%
summarise(Mean=mean(value, na.rm=T),SD=sd(value, na.rm=T))%>%mutate(Name=i$Genotype[1])%>%
mutate(Index=i$variable[1])})
list_plots_meanOVERCondition<-lapply(list_meanOVERCondition, function(p){p%>%ggplot(aes(x=as.Date(`Measuring Date`, format="%Y-%m-%d"),y=Mean,color=Condition))+
ylab(p$Index[1])+xlab("Date")+labs(title=p$Index[1])+
geom_rect(aes(xmin=begin, xmax=end,ymin=-Inf,ymax=Inf),fill="lightgrey",alpha=0.02,color="lightgrey")+
geom_point(size=1.5)+geom_line()+theme_bw(base_size = 10)+geom_errorbar(aes(ymin=Mean - SD, ymax=Mean+SD),
width=.2, position=position_dodge(0.05))+
scale_color_manual(values = c("Control"="turquoise3",
"Drought stress"="coral"))+
theme(axis.text.x = element_text(angle=75, hjust=1.2),legend.text=element_text(size=12),
legend.title = element_text(size=13),
axis.title.x = element_text(hjust=1),
axis.text=element_text(size=13),axis.title=element_text(size=14))
#ggsave(file=paste0(path_plotaverage, paste0(p$Index[1], "_average.pdf")))
# ggsave(file=paste0(path_plotaverage, paste0(p$Index[1], "_average.png")))
})
list_meanOVERCondition[[4]]
list_plots_meanOVERCondition[[4]]
list_Hc_Plant[[2]]
View(list_Hc_Plant[[2]])
View(metatable)
q()
